<?php
/*
 * Pipedrive
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace Pipedrive\Models;

use JsonSerializable;

/**
 *The total values of the Deals grouped by Deal currency
 */
class ValuesTotal implements JsonSerializable
{
    /**
     * The total value of Deals in the Deal currency group
     * @var double|null $value public property
     */
    public $value;

    /**
     * The number of Deals in the Deal currency group
     * @var integer|null $count public property
     */
    public $count;

    /**
     * The total value of Deals converted into the company default currency
     * @maps value_converted
     * @var double|null $valueConverted public property
     */
    public $valueConverted;

    /**
     * The total value of Deals formatted with Deal currency. E.g. â‚¬50
     * @maps value_formatted
     * @var string|null $valueFormatted public property
     */
    public $valueFormatted;

    /**
     * The value_converted formatted with Deal currency. E.g. US$50.10
     * @maps value_converted_formatted
     * @var string|null $valueConvertedFormatted public property
     */
    public $valueConvertedFormatted;

    /**
     * Constructor to set initial or default values of member properties
     * @param double  $value                   Initialization value for $this->value
     * @param integer $count                   Initialization value for $this->count
     * @param double  $valueConverted          Initialization value for $this->valueConverted
     * @param string  $valueFormatted          Initialization value for $this->valueFormatted
     * @param string  $valueConvertedFormatted Initialization value for $this->valueConvertedFormatted
     */
    public function __construct()
    {
        if (5 == func_num_args()) {
            $this->value                   = func_get_arg(0);
            $this->count                   = func_get_arg(1);
            $this->valueConverted          = func_get_arg(2);
            $this->valueFormatted          = func_get_arg(3);
            $this->valueConvertedFormatted = func_get_arg(4);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize(): mixed
    {
        $json = array();
        $json['value']                     = $this->value;
        $json['count']                     = $this->count;
        $json['value_converted']           = $this->valueConverted;
        $json['value_formatted']           = $this->valueFormatted;
        $json['value_converted_formatted'] = $this->valueConvertedFormatted;

        return $json;
    }
}
